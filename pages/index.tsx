import { ConnectButton } from '@rainbow-me/rainbowkit';
import type { NextPage } from 'next';
import Head from 'next/head';
import styles from '../styles/Home.module.css';
import { useAccount, usePrepareSendTransaction, useSendTransaction } from 'wagmi';
import { utils } from 'ethers'
import React from 'react';
import { useDebounce } from 'use-debounce';
import { parseEther } from 'viem';

const Home: NextPage = () => {
  const { isConnected } = useAccount();
  const [to, setTo] = React.useState('0xd7c737a195f75ccb819a1ce7474892e4ab6bff8f')
  const [debouncedTo] = useDebounce(to, 500)
 
  const [amount, setAmount] = React.useState('0.0001')
  const [debouncedAmount] = useDebounce(amount, 500)

  const { config } = usePrepareSendTransaction({
      to: debouncedTo,
      value: debouncedAmount ? BigInt(utils.parseEther(debouncedAmount).toString()) : undefined,
  })
  const { sendTransaction } = useSendTransaction(config)

  const handleTransfer = (n: number) => {
    for (let i = 0; i < n; i++) {
      sendTransaction?.()
    }
  }

  return (
    <div className={styles.container}>
      <Head>
        <title>RainbowKit App</title>
        <meta
          content="Generated by @rainbow-me/create-rainbowkit"
          name="description"
        />
        <link href="/favicon.ico" rel="icon" />
      </Head>

      <main className={styles.main}>
        <ConnectButton />

        <h1 className="text-6xl	font-sans	 font-bold	mb-8 mt-8">
          Gas Token Sender 
        </h1>

        {isConnected &&
        <div className="grid grid-cols-4 gap-4">
          <button onClick={() => handleTransfer(1)} className="transition-all bg-yellow-400 hover:bg-yellow-500 text-white font-bold py-2 px-4 rounded-lg">
          1 tx
          </button>
          <button onClick={() => handleTransfer(10)} className="transition-all bg-yellow-400 hover:bg-yellow-500 text-white font-bold py-2 px-4 rounded-lg">
          10 tx
          </button>
          <button onClick={() => handleTransfer(100)} className="transition-all bg-yellow-400 hover:bg-yellow-500 text-white font-bold py-2 px-4 rounded-lg">
          100 tx
          </button>
          <button onClick={() => handleTransfer(1000)} className="transition-all bg-yellow-400 hover:bg-yellow-500 text-white font-bold py-2 px-4 rounded-lg">
          1000 tx
          </button>
        </div>
        }
        {!isConnected && <p className="text-2xl">Connect to the wallet to get started.</p>}
      </main>

      <footer className={styles.footer}>
          Ohhh I am seeending...
      </footer>
    </div>
  );
};

export default Home;
